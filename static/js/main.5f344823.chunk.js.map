{"version":3,"sources":["logo.svg","GetTermsApp.js","App.js","reportWebVitals.js","index.js"],"names":["isKatakanaOrKanji","ch","indexOf","isCombiningKanji","GetTermsApp","props","state","fullText","sortedTerms","termCounts","event","bigString","target","value","normalize","uniqTerms","str","badLeadingTerms","badEndingTerms","accumulations","accumulator","i","length","includes","startsWith","slice","term","console","log","endsWith","undefined","accumulativeUniqParser","Object","keys","sortedKeys","sort","a","b","sortedValues","forEach","key","index","this","setState","numTerms","twoOrMoreKanjiTerms","filter","oneKanjiTerms","oneKanjiContext","oneKanji","pos","charAt","push","isKanji","id","className","classname","join","name","onChange","handleChange","bind","map","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f344823.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport \"./GetTermsApp.css\";\n\nfunction isKanji(ch) {\n  return (\n    (ch >= \"\\u4e00\" && ch <= \"\\u9faf\") || (ch >= \"\\u3400\" && ch <= \"\\u4dbf\")\n  );\n}\n\n// // determine whether a character is a katakana character\n// function isKatakana(ch) {\n//   return ch >= \"\\u30a0\" && ch <= \"\\u30ff\";\n// }\n\nfunction isHiragana(ch) {\n  return ch >= \"\\u3040\" && ch <= \"\\u309f\";\n}\n\nfunction isKatakanaOrKanji(ch) {\n  return (\n    (ch !== \"・\") && !isCombiningKanji(ch) && (\n      (ch >= \"\\u4e00\" && ch <= \"\\u9faf\") ||\n      (ch >= \"\\u3400\" && ch <= \"\\u4dbf\") ||\n      (ch >= \"\\u30a0\" && ch <= \"\\u30ff\"))\n  );\n}\n\nfunction isCombiningKanji(ch) {\n  return (\n    //\"全済毎各両等及又後上下内奥中時用以該頁個第間数無記側本約種製同実或\".indexOf(ch) !== -1\n    \"\".indexOf(ch) !== -1\n  )\n}\n\nfunction getBadLeadingTerms() {\n  return [\"当該\", \"前記\", \"上記\", \"同一\", \"適宜\", \"最大\", \"一層\", \"極力\", \"一部\", \"一体\", \"一見\", \"既知\"];\n}\n\nfunction getBackEndingTerms() {\n  return [\"可能\", \"同士\", \"参照\", \"未満\", \"対象\", \"乃至\", \"付近\", \"下部\", \"程度\", \"由来\", \"単位\"];\n}\n\n// adapted from https://github.com/darren-lester/nihongo\nfunction accumulativeUniqParser(str) {\n  const badLeadingTerms = getBadLeadingTerms();\n  const badEndingTerms = getBackEndingTerms();\n  // const badLeadingTerms = [];\n  // const badEndingTerms = [];\n  let accumulations = [];\n  let accumulator = \"\";\n\n  for (let i = 0; i < str.length; ++i) {\n    let ch = str[i];\n\n    if (isKatakanaOrKanji(ch)) {\n      //was condition(ch)\n      accumulator += ch;\n      if (badLeadingTerms.includes(accumulator)) {\n        accumulator = \"\";\n      }\n    } else if (accumulator !== \"\") {\n      // attempting to reduce number of 1-kanji terms\n      // removing 前記 from terms\n      if (accumulator.startsWith(\"前記\") && accumulator.length >= 3) {\n        accumulator = accumulator.slice(2);\n      }\n      for (let term of badEndingTerms) {\n        console.log(\"term is \", term, badEndingTerms)\n        if (accumulator.endsWith(term)) {\n          console.log(\"ends with \", term)\n          accumulator = accumulator.slice(0, accumulator.length - term.length)\n        }\n      }\n      if (accumulator !== \"\") {\n        if (accumulations[accumulator] === undefined) {\n          accumulations[accumulator] = 1;\n        } else {\n          accumulations[accumulator] += 1;\n        }\n      }\n      accumulator = \"\";\n    }\n  }\n\n  return accumulations;\n}\n\nclass GetTermsApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullText: \"\",\n      sortedTerms: [],\n      termCounts: [],\n    };\n    //console.log(this.state.highlighter)\n  }\n  // input change handlers should get us the details of files uploaded\n  handleChange(event) {\n    const bigString = event.target.value.normalize();\n    //this.setState({value: event.target.value});\n    //console.log(accumulativeUniqParser(event.target.value));\n    const uniqTerms = accumulativeUniqParser(bigString);\n    console.log(\"keys\", Object.keys(uniqTerms));\n    const sortedKeys = Object.keys(uniqTerms).sort(function (a, b) {\n      // ASC  -> a.length - b.length\n      // DESC -> b.length - a.length\n      return uniqTerms[b] - uniqTerms[a];\n    });\n    console.log(sortedKeys);\n    const sortedValues = [];\n    sortedKeys.forEach((key, index) => {\n      sortedValues[index] = uniqTerms[key];\n    });\n    this.setState({\n      fullText: bigString,\n      sortedTerms: sortedKeys,\n      termCounts: sortedValues,\n    });\n    console.log(sortedKeys, sortedValues);\n  }\n\n\n  render() {\n    const sortedTerms = this.state.sortedTerms;\n    const numTerms = sortedTerms.length;\n\n    const fullText = this.state.fullText;\n    // sortedTerms.map((term, index) => (string += <span>term</span>));\n    // console.log(string);\n\n    const twoOrMoreKanjiTerms = sortedTerms.filter((term) => term.length !== 1);\n    const oneKanjiTerms = sortedTerms.filter((term) => term.length === 1);\n    const oneKanjiContext = [];\n    console.log(\"full text: \", fullText);\n    oneKanjiTerms.forEach(function (oneKanji) {\n      let pos = fullText.indexOf(oneKanji);\n      // landed in infinite loop with text \"安全に閉じ\"\n      // while (isKanji(fullText.charAt(pos + 1))) {\n      //   pos = fullText.indexOf(oneKanji, pos + 1)\n      //   console.log(\"while\")\n      // }\n\n      if (isHiragana(fullText.charAt(pos + 1))) {\n        oneKanjiContext.push(fullText.slice(pos, pos + 2));\n        if (isKanji(fullText.charAt(pos + 2))) {\n          oneKanjiContext.push(fullText.slice(pos, pos + 3));\n        }\n      }\n\n    });\n\n    console.log(\"one kanji context\", oneKanjiContext.length, oneKanjiContext);\n    console.log(\"filtered terms length\", sortedTerms.length);\n    console.log(sortedTerms);\n    return (\n      <div id=\"overall\" className=\"position-trbl-0 overflow-hidden\">\n        <div classname=\"title\">Get Kanji Blobs</div>\n        <div>Small React app with a textbox for you to paste Japanese text into. What's returned is a list of Kanji blobs (could be terms), ordered by frequency of appearance.</div>\n        <div>・Ignored leading terms: {getBadLeadingTerms().join(\", \")}</div>\n        <div>・Ignored ending terms: {getBackEndingTerms().join(\", \")}</div>\n        Paste full text here:\n        <textarea\n          id=\"doc\"\n          name=\"doc\"\n          onChange={this.handleChange.bind(this)}\n        ></textarea>\n        <div className=\"row2\">\n          <div id=\"output\" name=\"output\" className=\"col\">\n            <div className=\"col-inner\">\n              Results sorted by appearance (total terms: {numTerms}):\n              <br />\n              {sortedTerms.map((term, index) => (\n                <span key={index}>\n                  {term}\n                  <br />\n                </span>\n              ))}\n            </div>\n          </div>\n          <div id=\"further\" name=\"further\" className=\"col\">\n            <div className=\"col-inner\">\n              Filtered out 1 kanji terms (count:{\" \"}\n              {twoOrMoreKanjiTerms.length}): <br />\n              {twoOrMoreKanjiTerms.map((term, index) => (\n                <span key={index}>\n                  {term}\n                  <br />\n                </span>\n              ))}\n            </div>\n          </div>\n          <div id=\"oneKanji\" name=\"oneKanji\" className=\"col\">\n            <div className=\"col-inner\">\n              1 kanji terms (count: {oneKanjiTerms.length}): <br />\n              {oneKanjiTerms.map((term, index) => (\n                <span key={index}>\n                  {term}\n                  <br />\n                </span>\n              ))}\n            </div>\n          </div>\n          <div id=\"oneKanjiContext\" name=\"oneKanjiContext\" className=\"col\">\n            <div className=\"col-inner\">\n              1 kanji context (count: {oneKanjiContext.length}): <br />\n              {oneKanjiContext.map((term, index) => (\n                <span key={index}>\n                  {term}\n                  <br />\n                </span>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GetTermsApp;\n","import logo from './logo.svg';\nimport './App.css';\nimport GetTermsApp from \"./GetTermsApp\";\n\nfunction App() {\n  return (\n    <GetTermsApp />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}